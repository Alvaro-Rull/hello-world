glimpse(df_storms)
read_csv("mtcars.csv")
df_mtcars
plot(score[,1], score[,2], type='n')
text(score[,1], score[,2], labels=jugadores_df$Jugador, lwd=1,cex=0.70)
# MEJORES JUGADORES EUROPA TOP 5 LIGAS (PROYECTO 2)
library(readr)
library(readxl)
library(ggplot2)
library(ggcorrplot)
library(ggfortify)
library(dplyr)
library(psych)
library('corrr')
library("FactoMineR")
library("factoextra")
#
ruta <- ("C:/Users/coke1/Desktop/1er CUATRI/FUNDAMENTOS PARA EL ANÁLISIS/TRABAJO FUTBOL 2/JUGADORES,EQUIPOS Y POS.xlsx")
datos_fut <- read_excel(ruta)
datos_fut$Asist <- as.numeric(gsub("-", "0", datos_fut$Asist))
datos_fut$Posicion <- ifelse(datos_fut$Posicion == "DL", 1,
ifelse(datos_fut$Posicion == "MED", 2,
ifelse(datos_fut$Posicion == "DF", 3, NA)))
datos_fut$TpP <- as.numeric(datos_fut$TpP)
datos_fut$Rating <- as.numeric(datos_fut$Rating)
jugadores_df <- data.frame(
Jugador = datos_fut$Jugador,
Posicion = datos_fut$Posicion,
Minutos = datos_fut$Mins,
Goles = datos_fut$Goles,
Asistencias = datos_fut$Asist,
TirosPP = datos_fut$TpP,
MVP = datos_fut$JdelP,
Rating = datos_fut$Rating
)
glimpse(jugadores_df)
summary(jugadores_df)
par(mfrow = c(1, 5))
boxplot(jugadores_df$Goles, main="Boxplot de Goles",col = "blue")
boxplot(jugadores_df$Minutos,main="Boxplot de minutos jugados",col="lightgreen")
boxplot(jugadores_df$Posicion, main="Boxplot de Posicion",col="orange",
yaxt = "n",
ylab = "Posicion")
axis(side = 2, at = 1:3, labels = c("Ataque", "Medio", "Defensa"))
boxplot(jugadores_df$MVP,main="Boxplot de MVP",col = "red")
boxplot(jugadores_df$Rating, main="Boxplot de Rating",col="lightblue")
par(mfrow = c(1, 1))
#CREAMOS UN NUEVO DF SIN LOS NOMBRES NI POSICION (valores no numéricos)
jugadores_numerico <- jugadores_df[, !(names(jugadores_df) %in% c("Jugador", "Posicion"))]
require(graphics)
pairs(jugadores_numerico,
panel = panel.smooth, main = "Jugadores")
library(TeachingDemos)
stars(jugadores_df) # Datos de jugadores
#----------------------------------------------------------
# Matriz de Correlaciones y determinante
#----------------------------------------------------------
round(cor(jugadores_numerico),3)
cor(jugadores_numerico)
cor_matriz <- cor(jugadores_numerico)
ggcorrplot(cor_matriz)
det(cor(jugadores_numerico))
#----------------------------------------------------------
# Autovalores (VECTOR PROPIO)
#----------------------------------------------------------
cor(jugadores_numerico)
eigen(cor(jugadores_numerico))
cortest.bartlett(cor_matriz, n = nrow(jugadores_numerico))
KMO(cor_matriz)
#----------------------------------------------------------
# PCA
#----------------------------------------------------------
acp <- princomp(jugadores_numerico, cor=TRUE)
loadings(acp)
# Los valores en esta parte de la tabla muestran cuánto contribuye cada variable original a la formación de cada componente principal.
#Un valor más alto en el loading indica una mayor contribución de esa variable al componente principal correspondiente.
summary(acp)
#----------------------------------------------------------
# Grafico de codo-Sedimentacion scree-plot
#----------------------------------------------------------
fviz_eig(acp, addlabels = TRUE)
#----------------------------------------------------------
# FACTORES: Cargas Factoriales
# Los Comp. tienen que inerpretarse
#----------------------------------------------------------
loadings(acp)
#• Gráficos biplot,puntuaciones y rotaciones
#----------------------------------------------------------
## Puntuaciones y Biplot
#----------------------------------------------------------
# acp$scores (porque valores están formados los componentes)
rownames(acp$scores) <- jugadores_df$Jugador
biplot(acp, cex=0.60)
library(TeachingDemos)
stars(jugadores_df) # Datos de jugadores
#----------------------------------------------------------
# Grafico de codo-Sedimentacion scree-plot
#----------------------------------------------------------
fviz_eig(acp, addlabels = TRUE)
#----------------------------------------------------------
# FACTORES: Cargas Factoriales
# Los Comp. tienen que inerpretarse
#----------------------------------------------------------
loadings(acp)
#• Gráficos biplot,puntuaciones y rotaciones
#----------------------------------------------------------
## Puntuaciones y Biplot
#----------------------------------------------------------
# acp$scores (porque valores están formados los componentes)
rownames(acp$scores) <- jugadores_df$Jugador
biplot(acp, cex=0.60)
# Biplot circular
fviz_pca_var(acp, col.var = "blue")
# Calidad de cada variable
fviz_cos2(acp, choice = "var", axes = 1:2)
#----------------------------------------------------------
# Puntuaciones sobre los factores: Se utiliza para construir
# indices
#----------------------------------------------------------
rownames(acp$scores) <- jugadores_df$Jugador
acp$scores[,1:3]
pcagrafico1<-prcomp(jugadores_numerico, scale. = TRUE) #AHORA ES PC
autoplot(pcagrafico1)
autoplot(pcagrafico1, data=jugadores_numerico, loadings=TRUE,
loadings.label=TRUE)
#----------------------------------------------------------
# Graficos Puntuaciones
#----------------------------------------------------------
score<-acp$scores[,1:3] #DUDA SOBRE SI PONER COMP EN VEZ DE SCORE EN TEXT
plot(score[,1], score[,2], type='n')
text(score[,1], score[,2], labels=jugadores_df$Jugador, lwd=1,cex=0.70)
plot(score[,1], score[,3], type='n')
text(score[,1], score[,3], labels=jugadores_df$Jugador, lwd=1,cex=0.70)
plot(score[,1], score[,2], type='n')
text(score[,1], score[,2], labels=jugadores_df$Jugador, lwd=1,cex=0.70)
library(TeachingDemos)
stars(jugadores_df) # Datos de jugadores
stars(jugadores_df[,-1],  # Excluyendo la columna "Equipo" de los datos
labels = as.character(jugadores_df),  # Convertir a character
key.loc = c(15, 1),  # Ubicación de la leyenda (puede necesitar ajuste)
main = "Gráfico de Estrellas para Equipos")
stars(jugadores_[,-1],  # Excluyendo la columna "Equipo" de los datos
labels = as.character(jugadores_df$Jugador),  # Convertir a character
key.loc = c(15, 1),  # Ubicación de la leyenda (puede necesitar ajuste)
main = "Gráfico de Estrellas para Equipos")
stars(jugadores_[,-1],  # Excluyendo la columna "Equipo" de los datos
labels = as.character(jugadores_df$Jugador),  # Convertir a character
key.loc = c(15, 1),  # Ubicación de la leyenda (puede necesitar ajuste)
main = "Gráfico de Estrellas para Equipos")
stars(jugadores_df[,-1],  # Excluyendo la columna "Equipo" de los datos
labels = as.character(jugadores_df$Jugador),  # Convertir a character
key.loc = c(15, 1),  # Ubicación de la leyenda (puede necesitar ajuste)
main = "Gráfico de Estrellas para Equipos")
stars(jugadores_df[,-1],  # Excluyendo la columna "Equipo" de los datos
labels = as.character(jugadores_df$Jugador),  # Convertir a character
key.loc = c(16, 1),  # Ubicación de la leyenda (puede necesitar ajuste)
main = "Gráfico de Estrellas para Equipos")
stars(jugadores_df[,-1],  # Excluyendo la columna "Equipo" de los datos
labels = as.character(jugadores_df$Jugador),  # Convertir a character
key.loc = c(10, 1),  # Ubicación de la leyenda (puede necesitar ajuste)
main = "Gráfico de Estrellas para Equipos")
stars(jugadores_df[,-1],  # Excluyendo la columna "Equipo" de los datos
labels = as.character(jugadores_df$Jugador),  # Convertir a character
key.loc = c(14, 3),  # Ubicación de la leyenda (puede necesitar ajuste)
main = "Gráfico de Estrellas para Equipos")
stars(jugadores_numerico,  # Excluyendo la columna "Equipo" de los datos
labels = as.character(jugadores_df$Jugador),  # Convertir a character
key.loc = c(14, 3),  # Ubicación de la leyenda (puede necesitar ajuste)
main = "Gráfico de Estrellas para Equipos")
biplot(acp, cex=0.55)
biplot(acp, cex=0.55, c(2,1))
biplot(acp, cex=0.55, c(1,3))
#----------------------------------------------------------
# FACTORES: Cargas Factoriales
# Los Comp. tienen que inerpretarse
#----------------------------------------------------------
loadings(acp)
par(mfrow = c(1, 2))
biplot(acp, cex=0.55, c(1,3))
biplot(acp, cex=0.55, c(2,3))
#----------------------------------------------------------
# Puntuaciones sobre los factores: Se utiliza para construir
# indices
#----------------------------------------------------------
rownames(acp$scores) <- jugadores_df$Jugador
acp$scores[,1:3]
pcagrafico1<-prcomp(jugadores_numerico, scale. = TRUE) #AHORA ES PC
autoplot(pcagrafico1)
autoplot(pcagrafico1, data=jugadores_numerico, loadings=TRUE,
loadings.label=TRUE)
#----------------------------------------------------------
# Graficos Puntuaciones
#----------------------------------------------------------
score<-acp$scores[,1:3] #DUDA SOBRE SI PONER COMP EN VEZ DE SCORE EN TEXT
par(mfrow = c(1, 3))
plot(score[,1], score[,2], type='n')
text(score[,1], score[,2], labels=jugadores_df$Jugador, lwd=1,cex=0.70)
plot(score[,1], score[,3], type='n')
text(score[,1], score[,3], labels=jugadores_df$Jugador, lwd=1,cex=0.70)
plot(score[,2], score[,3], type='n')
text(score[,2], score[,3], labels=jugadores_df$Jugador, lwd=1,cex=0.60)
par(mfrow = c(1, 1))
acp.varimax <- principal(jugadores_numerico, nfactors=3, rotate="varimax", scores=TRUE)
summary(acp.varimax)
#----------------------------------------------------------
# Grafico de codo-Sedimentacion scree-plot
#----------------------------------------------------------
eig_plot<- fviz_eig(acp, addlabels = TRUE)
eig_plot +
labs(title = "Gráfico de Codo-Sedimentación")+
xlab("Componentes")+
ylab("Porcentaje de varianza explicada")
#----------------------------------------------------------
# FACTORES: Cargas Factoriales
# Los Comp. tienen que inerpretarse
#----------------------------------------------------------
loadings(acp)
#• Gráficos biplot,puntuaciones y rotaciones
#----------------------------------------------------------
## Puntuaciones y Biplot
#----------------------------------------------------------
# acp$scores (porque valores están formados los componentes)
rownames(acp$scores) <- jugadores_df$Jugador
# MEJORES JUGADORES EUROPA TOP 5 LIGAS (PROYECTO 2)
library(readr)
library(readxl)
library(ggplot2)
library(ggcorrplot)
library(ggfortify)
library(dplyr)
library(psych)
library('corrr')
library("FactoMineR")
library("factoextra")
#
ruta <- ("C:/Users/coke1/Desktop/1er CUATRI/FUNDAMENTOS PARA EL ANÁLISIS/TRABAJO FUTBOL 2/JUGADORES,EQUIPOS Y POS.xlsx")
datos_fut <- read_excel(ruta)
datos_fut$Asist <- as.numeric(gsub("-", "0", datos_fut$Asist))
datos_fut$Posicion <- ifelse(datos_fut$Posicion == "DL", 1,
ifelse(datos_fut$Posicion == "MED", 2,
ifelse(datos_fut$Posicion == "DF", 3, NA)))
datos_fut$TpP <- as.numeric(datos_fut$TpP)
datos_fut$Rating <- as.numeric(datos_fut$Rating)
jugadores_df <- data.frame(
Jugador = datos_fut$Jugador,
Posicion = datos_fut$Posicion,
Minutos = datos_fut$Mins,
Goles = datos_fut$Goles,
Asistencias = datos_fut$Asist,
TirosPP = datos_fut$TpP,
MVP = datos_fut$JdelP,
Rating = datos_fut$Rating
)
glimpse(jugadores_df)
summary(jugadores_df)
par(mfrow = c(1, 5))
boxplot(jugadores_df$Goles, main="Boxplot de Goles",col = "blue")
boxplot(jugadores_df$Minutos,main="Boxplot de minutos jugados",col="lightgreen")
boxplot(jugadores_df$Posicion, main="Boxplot de Posicion",col="orange",
yaxt = "n",
ylab = "Posicion")
axis(side = 2, at = 1:3, labels = c("Ataque", "Medio", "Defensa"))
boxplot(jugadores_df$MVP,main="Boxplot de MVP",col = "red")
boxplot(jugadores_df$Rating, main="Boxplot de Rating",col="lightblue")
par(mfrow = c(1, 1))
#CREAMOS UN NUEVO DF SIN LOS NOMBRES NI POSICION (valores no numéricos)
jugadores_numerico <- jugadores_df[, !(names(jugadores_df) %in% c("Jugador", "Posicion"))]
require(graphics)
pairs(jugadores_numerico,
panel = panel.smooth, main = "Jugadores")
library(TeachingDemos)
par(cex = 0.80)
stars(jugadores_numerico,
labels = as.character(jugadores_df$Jugador),
key.loc = c(14, 3),
main = "Gráfico de Estrellas para Jugadores")
par(cex = 1)
#----------------------------------------------------------
# Matriz de Correlaciones y determinante
#----------------------------------------------------------
round(cor(jugadores_numerico),3)
cor(jugadores_numerico)
cor_matriz <- cor(jugadores_numerico)
ggcorrplot(cor_matriz)
det(cor(jugadores_numerico))
#----------------------------------------------------------
# Autovalores (VECTOR PROPIO)
#----------------------------------------------------------
cor(jugadores_numerico)
eigen(cor(jugadores_numerico))
cortest.bartlett(cor_matriz, n = nrow(jugadores_numerico))
KMO(cor_matriz)
#----------------------------------------------------------
# PCA
#----------------------------------------------------------
acp <- princomp(jugadores_numerico, cor=TRUE)
loadings(acp)
# Los valores en esta parte de la tabla muestran cuánto contribuye cada variable original a la formación de cada componente principal.
#Un valor más alto en el loading indica una mayor contribución de esa variable al componente principal correspondiente.
summary(acp)
#----------------------------------------------------------
# Grafico de codo-Sedimentacion scree-plot
#----------------------------------------------------------
eig_plot<- fviz_eig(acp, addlabels = TRUE)
eig_plot +
labs(title = "Gráfico de Codo-Sedimentación")+
xlab("Componentes")+
ylab("Porcentaje de varianza explicada")
#----------------------------------------------------------
# FACTORES: Cargas Factoriales
# Los Comp. tienen que inerpretarse
#----------------------------------------------------------
loadings(acp)
#• Gráficos biplot,puntuaciones y rotaciones
#----------------------------------------------------------
## Puntuaciones y Biplot
#----------------------------------------------------------
# acp$scores (porque valores están formados los componentes)
rownames(acp$scores) <- jugadores_df$Jugador
biplot(acp, cex=0.55)
par(mfrow = c(1, 2))
biplot(acp, cex=0.55, c(1,3))
biplot(acp, cex=0.55, c(2,3))
par(mfrow = c(1, 1))
# Biplot circular
fviz_pca_var(acp, col.var = "blue")
# Calidad de cada variable
fviz_cos2(acp, choice = "var", axes = 1:2)
#----------------------------------------------------------
# Puntuaciones sobre los factores: Se utiliza para construir
# indices
#----------------------------------------------------------
rownames(acp$scores) <- jugadores_df$Jugador
acp$scores[,1:3]
# Calidad de cada variable
fviz_cos2(acp, choice = "var", axes = 1:2)
# Calidad de cada variable
calidad_v<- fviz_cos2(acp, choice = "var", axes = 1:2)
# Calidad de cada variable
calidad_v<- fviz_cos2(acp, choice = "var", axes = 1:2)
calidad_v+
labs(title = "Calidad de las variables")+
ylab("Porcentaje de varianza explicada")
calidad_v+
labs(title = "Calidad de las variables")+
ylab("Variables")
fviz_cos2(acp, choice = "var", axes = 1:2)
calidad_v+
labs(title = "Calidad de las variables")+
ylab("Calidad de respresentación")
calidad_v+
labs(title = "CALIDAD DE LAS VARIABLES")+
ylab("Calidad de respresentación")
#----------------------------------------------------------
# FACTORES: Cargas Factoriales
# Los Comp. tienen que inerpretarse
#----------------------------------------------------------
loadings(acp)
acp.varimax <- principal(jugadores_numerico, nfactors=3, rotate="varimax", scores=TRUE)
summary(acp.varimax)
acp.varimax <- principal(jugadores_numerico, nfactors=3, rotate="varimax", scores=TRUE)
# MEJORES JUGADORES EUROPA TOP 5 LIGAS (PROYECTO 2)
library(readr)
library(readxl)
library(ggplot2)
library(ggcorrplot)
library(ggfortify)
library(dplyr)
library(psych)
library('corrr')
library("FactoMineR")
library("factoextra")
#
ruta <- ("C:/Users/coke1/Desktop/1er CUATRI/FUNDAMENTOS PARA EL ANÁLISIS/TRABAJO FUTBOL 2/JUGADORES,EQUIPOS Y POS.xlsx")
datos_fut <- read_excel(ruta)
datos_fut$Asist <- as.numeric(gsub("-", "0", datos_fut$Asist))
datos_fut$Posicion <- ifelse(datos_fut$Posicion == "DL", 1,
ifelse(datos_fut$Posicion == "MED", 2,
ifelse(datos_fut$Posicion == "DF", 3, NA)))
datos_fut$TpP <- as.numeric(datos_fut$TpP)
datos_fut$Rating <- as.numeric(datos_fut$Rating)
jugadores_df <- data.frame(
Jugador = datos_fut$Jugador,
Posicion = datos_fut$Posicion,
Minutos = datos_fut$Mins,
Goles = datos_fut$Goles,
Asistencias = datos_fut$Asist,
TirosPP = datos_fut$TpP,
MVP = datos_fut$JdelP,
Rating = datos_fut$Rating
)
glimpse(jugadores_df)
summary(jugadores_df)
par(mfrow = c(1, 5))
boxplot(jugadores_df$Goles, main="Boxplot de Goles",col = "blue")
boxplot(jugadores_df$Minutos,main="Boxplot de minutos jugados",col="lightgreen")
boxplot(jugadores_df$Posicion, main="Boxplot de Posicion",col="orange",
yaxt = "n",
ylab = "Posicion")
axis(side = 2, at = 1:3, labels = c("Ataque", "Medio", "Defensa"))
boxplot(jugadores_df$MVP,main="Boxplot de MVP",col = "red")
boxplot(jugadores_df$Rating, main="Boxplot de Rating",col="lightblue")
par(mfrow = c(1, 1))
#CREAMOS UN NUEVO DF SIN LOS NOMBRES NI POSICION (valores no numéricos)
jugadores_numerico <- jugadores_df[, !(names(jugadores_df) %in% c("Jugador", "Posicion"))]
require(graphics)
pairs(jugadores_numerico,
panel = panel.smooth, main = "Jugadores")
library(TeachingDemos)
par(cex = 0.80)
stars(jugadores_numerico,
labels = as.character(jugadores_df$Jugador),
key.loc = c(14, 3),
main = "Gráfico de Estrellas para Jugadores")
par(cex = 1)
#----------------------------------------------------------
# Matriz de Correlaciones y determinante
#----------------------------------------------------------
round(cor(jugadores_numerico),3)
cor(jugadores_numerico)
cor_matriz <- cor(jugadores_numerico)
ggcorrplot(cor_matriz)
det(cor(jugadores_numerico))
#----------------------------------------------------------
# Autovalores (VECTOR PROPIO)
#----------------------------------------------------------
cor(jugadores_numerico)
eigen(cor(jugadores_numerico))
cortest.bartlett(cor_matriz, n = nrow(jugadores_numerico))
KMO(cor_matriz)
#----------------------------------------------------------
# PCA
#----------------------------------------------------------
acp <- princomp(jugadores_numerico, cor=TRUE)
loadings(acp)
# Los valores en esta parte de la tabla muestran cuánto contribuye cada variable original a la formación de cada componente principal.
#Un valor más alto en el loading indica una mayor contribución de esa variable al componente principal correspondiente.
summary(acp)
#----------------------------------------------------------
# Grafico de codo-Sedimentacion scree-plot
#----------------------------------------------------------
eig_plot<- fviz_eig(acp, addlabels = TRUE)
eig_plot +
labs(title = "Gráfico de Codo-Sedimentación")+
xlab("Componentes")+
ylab("Porcentaje de varianza explicada")
#----------------------------------------------------------
# FACTORES: Cargas Factoriales
# Los Comp. tienen que inerpretarse
#----------------------------------------------------------
loadings(acp)
#• Gráficos biplot,puntuaciones y rotaciones
#----------------------------------------------------------
## Puntuaciones y Biplot
#----------------------------------------------------------
# acp$scores (porque valores están formados los componentes)
rownames(acp$scores) <- jugadores_df$Jugador
biplot(acp, cex=0.55)
par(mfrow = c(1, 2))
biplot(acp, cex=0.55, c(1,3))
biplot(acp, cex=0.55, c(2,3))
par(mfrow = c(1, 1))
# Biplot circular
fviz_pca_var(acp, col.var = "blue")
# Calidad de cada variable
calidad_v<- fviz_cos2(acp, choice = "var", axes = 1:2)
calidad_v+
labs(title = "CALIDAD DE LAS VARIABLES")+
ylab("Calidad de respresentación")
#----------------------------------------------------------
# Puntuaciones sobre los factores: Se utiliza para construir
# indices
#----------------------------------------------------------
rownames(acp$scores) <- jugadores_df$Jugador
acp$scores[,1:3]
pcagrafico1<-prcomp(jugadores_numerico, scale. = TRUE) #AHORA ES PC
autoplot(pcagrafico1)
autoplot(pcagrafico1, data=jugadores_numerico, loadings=TRUE,
loadings.label=TRUE)
#----------------------------------------------------------
# Graficos Puntuaciones
#----------------------------------------------------------
score<-acp$scores[,1:3] #DUDA SOBRE SI PONER COMP EN VEZ DE SCORE EN TEXT
par(mfrow = c(1, 3))
plot(score[,1], score[,2], type='n')
text(score[,1], score[,2], labels=jugadores_df$Jugador, lwd=1,cex=0.70)
plot(score[,1], score[,3], type='n')
text(score[,1], score[,3], labels=jugadores_df$Jugador, lwd=1,cex=0.70)
plot(score[,2], score[,3], type='n')
text(score[,2], score[,3], labels=jugadores_df$Jugador, lwd=1,cex=0.60)
par(mfrow = c(1, 1))
acp.varimax <- principal(jugadores_numerico, nfactors=3, rotate="varimax", scores=TRUE)
summary(acp.varimax)
# FACTORES: Interpretacion mas facil
loadings(acp.varimax)
acp.varimax2 <- principal(jugadores_numerico, nfactors=4, rotate="varimax", scores=TRUE)
summary(acp.varimax2)
loadings(acp.varimax2)
#----------------------------------------------------------
# Puntuaciones y Biplot Varimax
#----------------------------------------------------------
acp.varimax$scores
biplot(acp.varimax)
#RC1 <- MVP
#RC2 <- TirosPP
#RC3 <- Asistencias
jugadores_df
# Normalizar los factores
F1<-(acp$score[,1]-min(acp$score[,1]))/(max(acp$score[,1])-min(acp$score[,1]))
F2<-(acp$score[,2]-min(acp$score[,2]))/(max(acp$score[,2])-min(acp$score[,2]))
# Otra forma de hacerlo con scale()
F11<-scale(acp$score[,1], center=min(acp$score[,1]), scale=max(acp$score[,1])-min(acp$score[,1]))
